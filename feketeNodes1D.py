#****************************************************************************************
# Modules                                                                               *
#****************************************************************************************
import numpy as np
#****************************************************************************************



#****************************************************************************************
# Definition                                                                            *
#****************************************************************************************   
def feketeNodes1D(p = None,faceNodes = None): 
    if 1 == p:
        feketeNodes = np.array([- 1.0,1.0])
    else:
        if 2 == p:
            feketeNodes = np.array([- 1.0,0.0,1.0])
        else:
            if 3 == p:
                feketeNodes = np.array([- 1.0,- 0.4472135955,0.4472135955,1.0])
            else:
                if 4 == p:
                    feketeNodes = np.array([- 1.0,- 0.654653670708,1.096484628801e-16,0.654653670708,1.0])
                else:
                    if 5 == p:
                        feketeNodes = np.array([- 1.0,- 0.7650553239295,- 0.2852315164806,0.2852315164806,0.7650553239295,1.0])
                    else:
                        if 6 == p:
                            feketeNodes = np.array([- 1.0,- 0.8302238962786,- 0.4688487934707,1.045388153545e-16,0.4688487934707,0.8302238962786,1.0])
                        else:
                            if 7 == p:
                                feketeNodes = np.array([- 1.0,- 0.8717401485096,- 0.5917001814331,- 0.2092992179025,0.2092992179025,0.5917001814331,0.8717401485096,1.0])
                            else:
                                if 8 == p:
                                    feketeNodes = np.array([- 1.0,- 0.8997579954115,- 0.6771862795107,- 0.3631174638262,1.178993670744e-16,0.3631174638262,0.6771862795107,0.8997579954115,1.0])
                                else:
                                    if 9 == p:
                                        feketeNodes = np.array([- 1.0,- 0.9195339081665,- 0.7387738651055,- 0.4779249498104,- 0.1652789576664,0.1652789576664,0.4779249498104,0.7387738651055,0.9195339081665,1.0])
                                    else:
                                        if 10 == p:
                                            feketeNodes = np.array([- 1.0,- 0.9340014304081,- 0.7844834736631,- 0.5652353269962,- 0.2957581355869,1.147670565004e-16,0.2957581355869,0.5652353269962,0.7844834736631,0.9340014304081,1.0])
                                        else:
                                            if 11 == p:
                                                feketeNodes = np.array([- 1.0,- 0.9448992722229,- 0.819279321644,- 0.6328761530319,- 0.3995309409653,- 0.1365529328549,0.1365529328549,0.3995309409653,0.6328761530319,0.819279321644,0.9448992722229,1.0])
                                            else:
                                                if 12 == p:
                                                    feketeNodes = np.array([- 1.0,- 0.9533098466422,- 0.8463475646519,- 0.6861884690818,- 0.4829098210913,- 0.2492869301062,1.203298976554e-16,0.2492869301062,0.4829098210913,0.6861884690818,0.8463475646519,0.9533098466422,1.0])
                                                else:
                                                    if 13 == p:
                                                        feketeNodes = np.array([- 1.0,- 0.9599350452673,- 0.8678010538303,- 0.7288685990913,- 0.5506394029286,- 0.3427240133427,- 0.1163318688837,0.1163318688837,0.3427240133427,0.5506394029286,0.7288685990913,0.8678010538303,0.9599350452673,1.0])
                                                    else:
                                                        if 14 == p:
                                                            feketeNodes = np.array([- 1.0,- 0.9652459265038,- 0.885082044223,- 0.7635196899518,- 0.6062532054698,- 0.4206380547137,- 0.2153539553638,1.105861828404e-16,0.2153539553638,0.4206380547137,0.6062532054698,0.7635196899518,0.885082044223,0.9652459265038,1.0])
                                                        else:
                                                            if 15 == p:
                                                                feketeNodes = np.array([- 1.0,- 0.969568046270195,- 0.89920053309347,- 0.792008291861815,- 0.652388702882493,- 0.486059421887138,- 0.299830468900763,- 0.101326273521949,0.101326273521949,0.299830468900763,0.486059421887138,0.652388702882493,0.792008291861815,0.89920053309347,0.969568046270195,1.0])
                                                            else:
                                                                if 16 == p:
                                                                    feketeNodes = np.array([- 1.0,- 0.973132176631391,- 0.910879995915571,- 0.81569625122177,- 0.691028980627685,- 0.541385399330101,- 0.372174433565477,- 0.189511973518318,0,0.189511973518318,0.372174433565477,0.541385399330101,0.691028980627685,0.81569625122177,0.910879995915571,0.973132176631391,1.0])
                                                                else:
                                                                    if 17 == p:
                                                                        feketeNodes = np.array([- 1.0,- 0.976105557412166,- 0.920649185347529,- 0.83559353521809,- 0.723679329283243,- 0.588504834318662,- 0.434415036912124,- 0.266362652878281,- 0.089749093484652,0.089749093484652,0.266362652878281,0.434415036912124,0.588504834318662,0.723679329283243,0.83559353521809,0.920649185347529,0.976105557412166,1.0])
                                                                    else:
                                                                        if 18 == p:
                                                                            feketeNodes = np.array([- 1.0,- 0.978611766222042,- 0.928901528152579,- 0.852460577796646,- 0.751494202552613,- 0.628908137265221,- 0.488229285680714,- 0.333504847824499,- 0.169186023409281,0,0.169186023409281,0.333504847824499,0.488229285680714,0.628908137265221,0.751494202552613,0.852460577796646,0.928901528152579,0.978611766222042,1.0])
                                                                        else:
                                                                            if 19 == p:
                                                                                feketeNodes = np.array([- 1.0,- 0.980743704893872,- 0.935934498812655,- 0.86687797808995,- 0.775368260952056,- 0.663776402290311,- 0.534992864031886,- 0.392353183713909,- 0.239551705922986,- 0.080545937238822,0.080545937238822,0.239551705922987,0.392353183713909,0.534992864031886,0.663776402290311,0.775368260952056,0.86687797808995,0.935934498812655,0.980743704893872,1.0])
                                                                            else:
                                                                                if 20 == p:
                                                                                    feketeNodes = np.array([- 1.0,- 0.982572296604501,- 0.941976296959732,- 0.87929475532359,- 0.796001926077712,- 0.694051026062223,- 0.575831960261831,- 0.444115783279002,- 0.301989856508765,- 0.152785515802186,0,0.152785515802186,0.301989856508765,0.444115783279002,0.575831960261831,0.694051026062223,0.796001926077712,0.87929475532359,0.941976296959732,0.982572296604501,1.0])
                                                                                else:
                                                                                    raise Exception('Not implemented yet')
    feketeNodes = np.transpose(feketeNodes)
    #Ordering the nodes with the specified numbering
    nOfNodes = len(feketeNodes)
    givenNOfNodes = len(faceNodes)
    if nOfNodes != givenNOfNodes:
        raise Exception('Error computing fekete nodes: wrong given face nodes')
    givenFeketeNodes = feketeNodes[faceNodes-1]
    return givenFeketeNodes
#****************************************************************************************    
